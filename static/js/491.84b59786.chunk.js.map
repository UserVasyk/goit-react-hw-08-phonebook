{"version":3,"file":"static/js/491.84b59786.chunk.js","mappings":"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","sources":["redux/Contacts/selectors.js","components/ContactFrom/ContactForm.styled.jsx","components/ContactFrom/ContactFrom.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/Contacts/Contacts.styled.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const FieldInput = styled.input`\n  font-size: 15px;\n  padding: 5px 10px;\n`;\nexport const FormBox = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n\n  border: 2px solid black;\n  padding: 15px;\n  width: 350px;\n  margin-bottom: 20px;\n`;\nexport const ButtonSubmit = styled.button`\n  max-width: 115px;\n  border: none;\n  background-color: #3894fd;\n  height: 35px;\n  border-radius: 4px;\n  cursor: pointer;\n  :hover,\n  :focus {\n    box-shadow: 3px 3px 14px -1px #1fa9ff;\n  }\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 25px;\n  max-width: 250px;\n  gap: 10px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/operations';\nimport { getContacts } from 'redux/Contacts/selectors';\nimport { FieldInput, FormBox, ButtonSubmit, Label } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const onHandleSubmit = evt => {\n    evt.preventDefault();\n    setName('');\n    setNumber('');\n    const isExist = contacts.find(contact => contact.name === name);\n\n    if (isExist !== undefined) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({ name, number }));\n  };\n\n  const handleChange = evt => {\n    const target = evt.target;\n\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <FormBox onSubmit={onHandleSubmit}>\n      <Label>\n        Name\n        <FieldInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <FieldInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n    </FormBox>\n  );\n};\n","import styled from '@emotion/styled';\n\n\nexport const List = styled.ul`\n  margin-left: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nexport const ButtonDelete = styled.button`\n  border: none;\n  background-color: #3894fd;\n  border-radius: 4px;\n  height:20px;\n  cursor: pointer; margin-left: 10px;\n  :hover,\n  :focus {\n    box-shadow: 3px 3px 14px -1px #1fa9ff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/Contacts/operations';\nimport { getContacts } from 'redux/Contacts/selectors';\nimport { List, ButtonDelete } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filter = useSelector(state => state.filter);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  return (\n    <List>\n      {filterContacts().map(({ id, name, number }) => (\n        <li key={id}>\n          {name}: {number}\n          <ButtonDelete\n            onClick={() => dispatch(deleteContact(id))}\n            type=\"button\"\n          >\n            Delete\n          </ButtonDelete>\n        </li>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FindingContact = styled.input`\n  font-size: 15px;\n  padding: 5px 10px;\n`;\nexport const Label = styled.label`\n  font-size: 20px;\n  display: flex;\n  max-width: 250px;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 10px;\n`;\n","import { FindingContact, Label } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find Contacts by name\n      <FindingContact\n        type=\"text\"\n        onChange={evt => dispatch(setFilter(evt.currentTarget.value))}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 20px;\n`;\nexport const ContactsBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { ContactForm } from 'components/ContactFrom/ContactFrom';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Title, ContactsBox } from './Contacts.styled';\nconst Contacts = () => {\n  return (\n    <ContactsBox>\n      <Title>Contacts</Title>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </ContactsBox>\n  );\n};\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","FieldInput","styled","FormBox","ButtonSubmit","Label","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","evt","target","value","onSubmit","preventDefault","undefined","find","contact","alert","addContact","type","pattern","title","required","onChange","List","ButtonDelete","ContactList","filter","useEffect","fetchContacts","normalizedFilter","toLowerCase","trim","includes","filterContacts","map","id","onClick","deleteContact","FindingContact","Filter","setFilter","currentTarget","Title","ContactsBox"],"sourceRoot":""}